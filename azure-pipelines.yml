# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  System.debug: true

pool:
  vmimage: ubuntu-latest

stages:
- stage: npmbuild
  displayName: Create build folder using npm
  jobs:
    - job: npmbuild
      displayName: Create build folder using npm
      steps:
      - script: npm install
      - script: npm run build
    - job: Build
      displayName: Build
      steps:
      - task: Docker@2
        displayName: Build an image
        inputs:
          command: buildAndPush
          containerRegistry: docker.io
          repository: amitbb16/frontendProject
          dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
          tags: |
            $(tag)
- stage: Deploy
  displayName: Deploy to GKE Cluster
  jobs:
  - job: Deploy
    displayName: Deploy to GKE Cluster
    steps:
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'gke-dev-clusters'
        namespace: dev
        command: apply
        arguments: -f  k8s/deployment/
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'gke-dev-clusters'
        namespace: dev
        command: set
        arguments: image deployment/frontend frontend=amitbb16/frontendproject:$(tag)
    - task: Kubernetes@1
      displayName: 'kubectl  apply'
      inputs:
        kubernetesServiceConnection: 'gke-dev-clusters'
        namespace: dev
        command: apply
        configuration: https://github.com/cert-manager/cert-manager/releases/download/v1.13.2/cert-manager.yaml
    - task: Kubernetes@1
      displayName: 'kubectl  apply'
      inputs:
        kubernetesServiceConnection: 'gke-dev-clusters'
        namespace: dev
        command: apply
        configuration: https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.2/deploy/static/provider/cloud/deploy.yaml
    - task: Kubernetes@1
      displayName: 'kubectl  apply'
      inputs:
        kubernetesServiceConnection: 'gke-dev-clusters'
        namespace: dev
        command: apply
        configuration: k8s/ingress
    - task: Kubernetes@1
      displayName: 'kubectl  apply'
      inputs:
        kubernetesServiceConnection: 'gke-dev-clusters'
        namespace: dev
        command: apply
        configuration: k8s/issuers